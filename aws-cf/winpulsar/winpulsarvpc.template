{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This template creates a single instance of the WinPulsar pulsar scheduler on Windows.",

  "Parameters" : {

    "InstanceType" : {
      "Description" : "Amazon EC2 instance type",
      "Type" : "String",
      "AllowedPattern": "^[a-z]+\\d+[a-z]*\\.(nano|micro|small|medium|large|\\d*xlarge)$",
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SubnetId" : {
      "Description" : "Amazon EC2 Subnet Id",
      "Type": "String"
    },

    "VpcId" : {
      "Description" : "Amazon EC2 VPC Id",
      "Type": "String"
    },

    "ClusterName" : {
      "Description" : "Cluster name",
      "Default": "",
      "Type": "String"
    },

    "AMQPURL" : {
      "Description" : "Message Queue URL",
      "Type": "String"
    },

    "DownloadURL" : {
      "Description" : "Resource Download URL",
      "Type": "String"
    },

    "ImageId" : {
      "Description" : "Amazon AMI Image-Id",
      "Type": "String"
    },

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "SourceCidrForRDP" : {
      "Description" : "IP Cidr from which you are likely to RDP into the instances. You can add rules later by modifying the created security groups e.g. 54.32.98.160/32",
      "Type" : "String",
      "Default": "127.0.0.1/32",
      "MinLength" : "9",
      "MaxLength" : "18",
      "AllowedPattern" : "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$"
    }

  },

  "Resources" : {

    "WinPulsarSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable Pulsar and RDP",
	"VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "8913", "ToPort" : "8913", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "SourceCidrForRDP" }}
        ]
      }
    },

    "WinPulsarInstance": {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "files" : {
              "c:\\cfn\\cfn-hup.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" : "AWS::Region" }, "\n"
                  ]]}
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                "content": { "Fn::Join" : ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.WinPulsarInstance.Metadata.AWS::CloudFormation::Init\n",
                  "action=cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" },
                                                 " -r WinPulsarInstance",
                                                 " --region ", { "Ref" : "AWS::Region" }, "\n"
                ]]}
              },
              "C:\\bootstrap.exe" : {
                "source" : { "Fn::Join" : ["", [
                  { "Ref" : "DownloadURL" }, "/bootstrap.exe"
                ]]}
              },
	      "C:\\amqpurl.txt" : {
		"content": { "Ref" : "AMQPURL" }
              },
	      "C:\\dlurl.txt" : {
		"content": { "Ref" : "DownloadURL" }
              }
            },
            "commands" : {
              "1-bootstrap" : {
                "command" : "bootstrap.exe",
		"cwd": "C:\\"
              },
              "2-install" : {
                "command" : "setup.bat > setup.log",
		"cwd": "C:\\bootstrap"
              }
            },
            
            "services" : {
              "windows" : {
                "cfn-hup" : {
                  "enabled" : "true",
                  "ensureRunning" : "true",
                  "files" : ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]
                }
              }
            }
          }
        }
      },

      "Properties": {
        "InstanceType" : { "Ref" : "InstanceType" },
        "ImageId" : { "Ref" : "ImageId" },
        "Tags": [ {"Key": "Name", "Value" : { "Fn::Join" : [ " ", [ "WinPulsar:", { "Ref" : "ClusterName" } ] ] } } ],
	"SubnetId" : { "Ref" : "SubnetId" },
        "BlockDeviceMappings" : [ 
	    { "DeviceName" : "/dev/sda1", "Ebs" :  { "VolumeSize" : "100", "VolumeType" : "gp2" } } 
            ], 
        "SecurityGroupIds" : [ {"Ref" : "WinPulsarSecurityGroup"} ],
        "KeyName" : { "Ref" : "KeyName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "<script>\n",

          "cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" }, 
          " -r WinPulsarInstance",
          " --region ", { "Ref" : "AWS::Region" }, "\n",

          "cfn-signal.exe -e %ERRORLEVEL% ", { "Fn::Base64" : { "Ref" : "WinPulsarInstanceWaitHandle" }}, "\n",

          "c:\\WinPulsar\\run.bat > run.log", "\n",
          
          "</script>"
          ]]}}
        }
    },

    "WinPulsarInstanceWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WinPulsarInstanceWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WinPulsarInstance",
      "Properties" : {
        "Handle" : {"Ref" : "WinPulsarInstanceWaitHandle"},
        "Timeout" : "2400"
      }
    }
  },

  "Outputs" : {
    "PrivateIP" : {
      "Value" : { "Fn::GetAtt" : [ "WinPulsarInstance", "PrivateIp" ] },
      "Description" : "Private IP address"
    },
    "PublicIP" : {
      "Value" : { "Fn::GetAtt" : [ "WinPulsarInstance", "PublicIp" ] },
      "Description" : "Public IP address"
    }
  }
}
